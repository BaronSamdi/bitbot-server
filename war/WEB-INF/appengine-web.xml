<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
	<application>safecrypt</application>
	<version>1</version>

	<!-- Allows App Engine to send multiple requests to one instance in parallel: -->
	<threadsafe>true</threadsafe>
	
	
	<!-- The <public-root> is a directory in your application that contains 
		the static files for your application. When a request for a static file is 
		made, the <public-root> for your application is prepended to the request 
		path. This gives the path of an application file containing the content that 
		is being requested. 
	<public-root>/static</public-root> -->

	<!-- Configure serving/caching of GWT files -->
	<static-files>
		<include path="**" />

		<!-- The following line requires App Engine 1.3.2 SDK -->
		<include path="**.nocache.*" expiration="0s" />

		<include path="**.cache.*" expiration="365d" />
		<exclude path="**.gwt.rpc" />
	</static-files>

	<!-- Configure java.util.logging -->
	<system-properties>
		<property name="java.util.logging.config.file" value="WEB-INF/logging.properties" />
	</system-properties>

	<!-- HTTP Sessions are disabled by default. To enable HTTP sessions specify: 
		<sessions-enabled>true</sessions-enabled> It's possible to reduce request 
		latency by configuring your application to asynchronously write HTTP session 
		data to the datastore: <async-session-persistence enabled="true" /> With 
		this feature enabled, there is a very small chance your app will see stale 
		session data. For details, see http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions -->

	<!-- enable HTTP sessions -->
	<sessions-enabled>true</sessions-enabled>
	<async-session-persistence enabled="true" />

	<!-- enable the incoming email service <inbound-services> <service>mail</service> 
		</inbound-services> -->

	<!-- be notified when a client connects to or disconnects from a channel 
		When you enable channel_presence, your application receives POSTs to the 
		following URL paths: POSTs to /_ah/channel/connected/ signal that the client 
		has connected to the channel and can receive messages. POSTs to /_ah/channel/disconnected/ 
		signal that the client has disconnected from the channel. <inbound-services> 
		<service>channel_presence</service> </inbound-services> -->

</appengine-web-app>
